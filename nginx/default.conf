# Redirige siempre HTTP a HTTPS
server {
    listen 80;
    server_name 172.16.218.200;

    # Redirigir todas las peticiones HTTP a HTTPS
    return 301 https://$host$request_uri;
}

# Servidor HTTPS
server {
    listen 443 ssl;
    server_name 172.16.218.200;

    # Certificados montados como volume desde el host
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # Redirigir la ra√≠z a /gestionIES/
    location = / {
        return 302 /gestionIES/;
    }

    # Redirigir /gestionIES sin barra final a /gestionIES/
    location = /gestionIES {
        return 301 /gestionIES/;
    }

    # Servir el frontend SPA en /gestionIES/
    location /gestionIES/ {
        alias /usr/share/nginx/html/gestionIES/;
        index index.html;

        # Importante: el try_files apunta a index.html relativo al alias
        try_files $uri $uri/ /index.html;
    }

    # Proxy inverso para el backend Node.js
    location /api/ {
        proxy_pass http://backend_app:5000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Servir /uploads/ desde el backend
    location /uploads/ {
        proxy_pass http://backend_app:5000/uploads/;
    }
}
